{
    "__inputs": [
      {
        "name": "DS_INFLUXDB-FLUX",
        "label": "InfluxDB-Flux",
        "description": "",
        "type": "datasource",
        "pluginId": "influxdb",
        "pluginName": "InfluxDB"
      }
    ],
    "__elements": {},
    "__requires": [
      {
        "type": "grafana",
        "id": "grafana",
        "name": "Grafana",
        "version": "10.1.1"
      },
      {
        "type": "datasource",
        "id": "influxdb",
        "name": "InfluxDB",
        "version": "1.0.0"
      },
      {
        "type": "panel",
        "id": "table",
        "name": "Table",
        "version": ""
      }
    ],
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": {
            "type": "grafana",
            "uid": "-- Grafana --"
          },
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": null,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "collapsed": false,
        "gridPos": {
          "h": 1,
          "w": 24,
          "x": 0,
          "y": 0
        },
        "id": 51,
        "panels": [],
        "repeat": "di",
        "repeatDirection": "h",
        "title": "Module, Carrier PMs ${di}",
        "type": "row"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "InfluxDB-Flux"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "center",
              "cellOptions": {
                "type": "color-text"
              },
              "inspect": false
            },
            "displayName": "${__field.labels.aid}/${__field.name}",
            "mappings": [
              {
                "options": {
                  "-55": {
                    "color": "red",
                    "index": 0,
                    "text": "Not Set"
                  }
                },
                "type": "value"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "short"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "xr.carrier.lbc_tx_ne"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "TX LBC (mA)"
                },
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "transparent",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 189
                      },
                      {
                        "color": "yellow",
                        "value": 194
                      },
                      {
                        "color": "green",
                        "value": 195
                      },
                      {
                        "color": "green",
                        "value": 205
                      },
                      {
                        "color": "#EAB839",
                        "value": 206
                      },
                      {
                        "color": "red",
                        "value": 211
                      },
                      {
                        "color": "#6ED0E0",
                        "value": 221
                      }
                    ]
                  }
                },
                {
                  "id": "color"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "xr.carrier.lbc_rx_ne"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "RX LBC (mA)"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "xr.carrier.coherent_signal_power_rx_ne"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "RX Signal Power (dBm)"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "xr.carrier.frequency_tx_ne"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "TX Frequency (MHz)"
                },
                {
                  "id": "unit",
                  "value": "none"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 12,
          "x": 0,
          "y": 1
        },
        "id": 41,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "showHeader": true,
          "sortBy": [
            {
              "desc": true,
              "displayName": "/_time"
            }
          ]
        },
        "pluginVersion": "10.1.1",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "InfluxDB-Flux"
            },
            "query": "from(bucket: \"xr-1m\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"gauge\")\r\n  |> filter(fn: (r) => r[\"rt\"] == \"lineptp\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] !~ /_min/ and r[\"_measurement\"] !~ /_max/ and r[\"_measurement\"] !~ /_avg/)\r\n  |> filter(fn: (r) => r[\"sn\"] =~ /^${sn:regex}/)\r\n  |> filter(fn: (r) => r[\"di\"] =~ /^${di:regex}/)\r\n  |> sort(columns: [\"_time\"], desc: true)\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n  |> limit (n:${records})\r\n  |> pivot(rowKey: [\"_time\"], columnKey: [\"_measurement\"], valueColumn: \"_value\")\r\n ",
            "refId": "A"
          }
        ],
        "title": "Module PMs",
        "transformations": [
          {
            "id": "labelsToFields",
            "options": {
              "keepLabels": [
                "aid"
              ],
              "mode": "columns",
              "valueLabel": "_field"
            }
          },
          {
            "id": "merge",
            "options": {}
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {
                "_time": 0,
                "aid": 1,
                "xr.lineptp.case_temp": 2,
                "xr.lineptp.laser_temp": 3,
                "xr.lineptp.opr_rx_ne": 4,
                "xr.lineptp.opt_tx_ne": 5,
                "xr.lineptp.wavelocker_temp": 6
              },
              "renameByName": {
                "_time": "Time",
                "aid": "AID",
                "xr.lineptp.case_temp": "Module Temp (C)",
                "xr.lineptp.laser_temp": "Laser Temp (C)",
                "xr.lineptp.opr_rx_ne": "Total RX Power (dBm)",
                "xr.lineptp.opt_tx_ne": "Total TX Power (dBm)",
                "xr.lineptp.wavelocker_temp": "Wavelocker Temp (C)"
              }
            }
          }
        ],
        "type": "table"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "InfluxDB-Flux"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "center",
              "cellOptions": {
                "type": "color-text"
              },
              "inspect": false
            },
            "displayName": "${__field.name}",
            "mappings": [
              {
                "options": {
                  "-55": {
                    "color": "red",
                    "index": 0,
                    "text": "Not Set"
                  }
                },
                "type": "value"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "short"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "xr.carrier.coherent_signal_power_rx_ne"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 227
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "xr.carrier.frequency_tx_ne"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 330
                },
                {
                  "id": "unit",
                  "value": "none"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "xr.carrier.lbc_tx_ne"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 207
                },
                {
                  "id": "thresholds",
                  "value": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "transparent",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 189
                      },
                      {
                        "color": "yellow",
                        "value": 194
                      },
                      {
                        "color": "green",
                        "value": 195
                      },
                      {
                        "color": "green",
                        "value": 205
                      },
                      {
                        "color": "#EAB839",
                        "value": 206
                      },
                      {
                        "color": "red",
                        "value": 211
                      }
                    ]
                  }
                },
                {
                  "id": "color",
                  "value": {
                    "mode": "thresholds"
                  }
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "xr.carrier.lbc_rx_ne"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 322
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 6,
          "w": 10,
          "x": 12,
          "y": 1
        },
        "id": 49,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "frameIndex": 4,
          "showHeader": true,
          "sortBy": []
        },
        "pluginVersion": "10.1.1",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "InfluxDB-Flux"
            },
            "query": "from(bucket: \"xr-1m\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"gauge\")\r\n  |> filter(fn: (r) => r[\"rt\"] == \"carrier\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] !~ /_min/ and r[\"_measurement\"] !~ /_max/ and r[\"_measurement\"] !~ /_avg/)\r\n  |> filter(fn: (r) => r[\"sn\"] =~ /^${sn:regex}/)\r\n  |> filter(fn: (r) => r[\"di\"] =~ /^${di:regex}/)\r\n  |> sort(columns: [\"_time\"], desc: true)\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n  |> limit (n:${records})\r\n  |> pivot(rowKey: [\"_time\", \"aid\"], columnKey: [\"_measurement\"], valueColumn: \"_value\")\r\n \r\n\r\n",
            "refId": "A"
          }
        ],
        "title": "Carrier PMs",
        "transformations": [
          {
            "id": "labelsToFields",
            "options": {
              "keepLabels": [
                "aid",
                "sn"
              ]
            }
          },
          {
            "id": "merge",
            "options": {}
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {
                "_time": 0,
                "aid": 1,
                "xr.carrier.coherent_signal_power_rx_ne": 2,
                "xr.carrier.frequency_tx_ne": 3,
                "xr.carrier.lbc_rx_ne": 4,
                "xr.carrier.lbc_tx_ne": 5
              },
              "renameByName": {
                "xr.carrier.coherent_signal_power_rx_ne": "RX Signal Power (dBm)",
                "xr.carrier.frequency_tx_ne": "TX Frequency (THz)",
                "xr.carrier.lbc_rx_ne": "RX LBC (mA)",
                "xr.carrier.lbc_tx_ne": "TX LBC (mA)"
              }
            }
          }
        ],
        "type": "table"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "InfluxDB-Flux"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "center",
              "cellOptions": {
                "type": "color-text"
              },
              "inspect": false
            },
            "displayName": "${__field.name:regexReplaceAll((\\.\\w+)$, \"$1\")}",
            "mappings": [
              {
                "options": {
                  "-55": {
                    "color": "red",
                    "index": 0,
                    "text": "Not Set"
                  },
                  "not acquired": {
                    "color": "red",
                    "index": 4
                  },
                  "not configured": {
                    "color": "blue",
                    "index": 2
                  },
                  "ok": {
                    "color": "green",
                    "index": 1
                  },
                  "powered down": {
                    "color": "orange",
                    "index": 3
                  }
                },
                "type": "value"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "short"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "sn"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 186
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 22,
          "x": 0,
          "y": 7
        },
        "id": 52,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "frameIndex": 4,
          "showHeader": true,
          "sortBy": [
            {
              "desc": false,
              "displayName": "AID"
            }
          ]
        },
        "pluginVersion": "10.1.1",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "InfluxDB-Flux"
            },
            "query": "from(bucket: \"xr-1m\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"gauge\")\r\n  |> filter(fn: (r) => r[\"rt\"] == \"dsc\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] !~ /_min/ and r[\"_measurement\"] !~ /_max/ and r[\"_measurement\"] !~ /_avg/)\r\n  |> filter(fn: (r) => r[\"sn\"] =~ /^${sn:regex}/)\r\n  |> filter(fn: (r) => r[\"di\"] =~ /^${di:regex}/)\r\n  |> filter(fn: (r) => r[\"aid\"] =~ /^${aids:regex}$/)\r\n  |> sort(columns: [\"_time\"], desc: true)\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n  |> limit (n:${records})\r\n  |> pivot(rowKey: [\"_time\", \"aid\"], columnKey: [\"_measurement\"], valueColumn: \"_value\")\r\n  |> map(      \r\n    fn: (r) => ({r with\r\n        \"DSC State\": if r._value == 0 then \"not configured\"\r\n        else if r._value == .25 then \"powered down\"\r\n        else if r._value == 0.144742 then \"not acquired\"\r\n        else \"ok\"\r\n\r\n    }))\r\n\r\n\r\n",
            "refId": "A"
          }
        ],
        "title": "DSC PMs",
        "transformations": [
          {
            "id": "labelsToFields",
            "options": {}
          },
          {
            "id": "merge",
            "options": {}
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {
                "_field": true,
                "_start": true,
                "_stop": true,
                "di": true,
                "dt": true,
                "network": true,
                "otel.library.name": true,
                "otel.library.version": true,
                "rt": true
              },
              "indexByName": {
                "DSC State": 2,
                "_field": 9,
                "_start": 10,
                "_stop": 11,
                "_time": 0,
                "aid": 1,
                "di": 12,
                "dt": 13,
                "network": 14,
                "otel.library.name": 15,
                "otel.library.version": 16,
                "rt": 17,
                "xr.dsc.osnr_rx_ne": 5,
                "xr.dsc.post_fec_ber_rx_ne": 6,
                "xr.dsc.pre_fec_ber_rx_ne": 4,
                "xr.dsc.pre_fec_q_rx_ne": 3,
                "xr.dsc.snr_rx_ne": 7,
                "xr.dsc.uncorrected_code_words_rx_ne": 8
              },
              "renameByName": {
                "aid": "AID",
                "xr.dsc.osnr_rx_ne": "OSNR",
                "xr.dsc.post_fec_ber_rx_ne": "Post-FEC BER",
                "xr.dsc.pre_fec_ber_rx_ne": "Pre-FEC BER",
                "xr.dsc.pre_fec_q_rx_ne": "Pre-FEC Q",
                "xr.dsc.snr_rx_ne": "SNR",
                "xr.dsc.uncorrected_code_words_rx_ne": "Uncorrected Code Words"
              }
            }
          },
          {
            "disabled": true,
            "id": "renameByRegex",
            "options": {
              "regex": "(\\.\\w+)$",
              "renamePattern": "$1"
            }
          }
        ],
        "type": "table"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "InfluxDB-Flux"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "center",
              "cellOptions": {
                "type": "color-text"
              },
              "inspect": false
            },
            "displayName": "${__field.name:regexReplaceAll((\\.\\w+)$, \"$1\")}",
            "mappings": [
              {
                "options": {
                  "-55": {
                    "color": "red",
                    "index": 0,
                    "text": "Not Set"
                  },
                  "not acquired": {
                    "color": "red",
                    "index": 4
                  },
                  "not configured": {
                    "color": "blue",
                    "index": 2
                  },
                  "ok": {
                    "color": "green",
                    "index": 1
                  },
                  "powered down": {
                    "color": "orange",
                    "index": 3
                  }
                },
                "type": "value"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "short"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "sn"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 186
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 22,
          "x": 0,
          "y": 15
        },
        "id": 54,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "frameIndex": 4,
          "showHeader": true,
          "sortBy": [
            {
              "desc": false,
              "displayName": "sn"
            }
          ]
        },
        "pluginVersion": "10.1.1",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "InfluxDB-Flux"
            },
            "query": "from(bucket: \"xr-1m\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"gauge\" or r[\"_field\"] == \"counter\")\r\n  |> filter(fn: (r) => r[\"rt\"] == \"otu\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] !~ /_min/ and r[\"_measurement\"] !~ /_max/ and r[\"_measurement\"] !~ /_avg/)\r\n  |> filter(fn: (r) => r[\"sn\"] =~ /^${sn:regex}/)\r\n  |> filter(fn: (r) => r[\"di\"] =~ /^${di:regex}/)\r\n  |> sort(columns: [\"_time\"], desc: true)\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n  |> limit (n:${records})\r\n  |> pivot(rowKey: [\"_time\", \"aid\"], columnKey: [\"_measurement\"], valueColumn: \"_value\")\r\n\r\n\r\n\r\n",
            "refId": "A"
          }
        ],
        "title": "OTU PMs",
        "transformations": [
          {
            "id": "labelsToFields",
            "options": {
              "keepLabels": [
                "aid"
              ],
              "valueLabel": "_field"
            }
          },
          {
            "id": "merge",
            "options": {}
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {
                "_time": 0,
                "aid": 1,
                "xr.otu.odu.errored_blocks_far_end_rx_fe": 2,
                "xr.otu.odu.errored_blocks_rx_ne": 3,
                "xr.otu.odu.errored_seconds_far_end_rx_fe": 4,
                "xr.otu.odu.errored_seconds_rx_ne": 5,
                "xr.otu.odu.severely_errored_seconds_far_end_rx_fe": 6,
                "xr.otu.odu.severely_errored_seconds_rx_ne": 7,
                "xr.otu.odu.unavailable_seconds_far_end_rx_fe": 8,
                "xr.otu.odu.unavailable_seconds_rx_ne": 9
              },
              "renameByName": {
                "_time": "Time",
                "aid": "AID",
                "xr.otu.errored_blocks_far_end_rx_fe": "Errored Blocks (FE)",
                "xr.otu.errored_blocks_rx_ne": "Errored Blocks (NE)",
                "xr.otu.errored_seconds_far_end_rx_fe": "Errored Seconds (FE)",
                "xr.otu.errored_seconds_rx_ne": "Errored Seconds (NE)",
                "xr.otu.odu.errored_blocks_far_end_rx_fe": "Errored Blocks (FE)",
                "xr.otu.odu.errored_blocks_rx_ne": "Errored Blocks (NE)",
                "xr.otu.odu.errored_seconds_far_end_rx_fe": "Errored Seconds (FE)",
                "xr.otu.odu.errored_seconds_rx_ne": "Errored Seconds (NE)",
                "xr.otu.odu.severely_errored_seconds_far_end_rx_fe": "Severely Errored Seconds (FE)",
                "xr.otu.odu.severely_errored_seconds_rx_ne": "Severely Errored Seconds (NE)",
                "xr.otu.odu.unavailable_seconds_far_end_rx_fe": "Unavailable Seconds (FE)",
                "xr.otu.odu.unavailable_seconds_rx_ne": "Unavailable Seconds (NE)",
                "xr.otu.propagation_delay_rx_ne": "Propagation Delay",
                "xr.otu.severely_errored_seconds_far_end_rx_fe": "Severely Errored Seconds (FE)",
                "xr.otu.severely_errored_seconds_rx_ne": "Severely Errored Seconds (NE)",
                "xr.otu.unavailable_seconds_far_end_rx_fe": "Unavailable Errored Seconds (FE)",
                "xr.otu.unavailable_seconds_rx_ne": "Unavailable Errored Seconds (NE)"
              }
            }
          }
        ],
        "type": "table"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "InfluxDB-Flux"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "center",
              "cellOptions": {
                "type": "color-text"
              },
              "inspect": false
            },
            "displayName": "${__field.name:regexReplaceAll((\\.\\w+)$, \"$1\")}",
            "mappings": [
              {
                "options": {
                  "-55": {
                    "color": "red",
                    "index": 0,
                    "text": "Not Set"
                  },
                  "not acquired": {
                    "color": "red",
                    "index": 4
                  },
                  "not configured": {
                    "color": "blue",
                    "index": 2
                  },
                  "ok": {
                    "color": "green",
                    "index": 1
                  },
                  "powered down": {
                    "color": "orange",
                    "index": 3
                  }
                },
                "type": "value"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "short"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "sn"
              },
              "properties": [
                {
                  "id": "custom.width",
                  "value": 186
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 22,
          "x": 0,
          "y": 23
        },
        "id": 55,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "frameIndex": 4,
          "showHeader": true,
          "sortBy": [
            {
              "desc": false,
              "displayName": "sn"
            }
          ]
        },
        "pluginVersion": "10.1.1",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "InfluxDB-Flux"
            },
            "query": "from(bucket: \"xr-1m\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"gauge\" or r[\"_field\"] == \"counter\")\r\n  |> filter(fn: (r) => r[\"rt\"] == \"odu\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] !~ /_min/ and r[\"_measurement\"] !~ /_max/ and r[\"_measurement\"] !~ /_avg/)\r\n  |> filter(fn: (r) => r[\"sn\"] =~ /^${sn:regex}/)\r\n  |> filter(fn: (r) => r[\"di\"] =~ /^${di:regex}/)\r\n  |> sort(columns: [\"_time\"], desc: true)\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n  |> limit (n:${records})\r\n  |> pivot(rowKey: [\"_time\", \"aid\"], columnKey: [\"_measurement\"], valueColumn: \"_value\")\r\n\r\n\r\n\r\n",
            "refId": "A"
          }
        ],
        "title": "ODU PMs",
        "transformations": [
          {
            "id": "labelsToFields",
            "options": {
              "keepLabels": [
                "aid"
              ],
              "valueLabel": "_field"
            }
          },
          {
            "id": "merge",
            "options": {}
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {
                "_time": 0,
                "aid": 1,
                "xr.otu.odu.errored_blocks_far_end_rx_fe": 2,
                "xr.otu.odu.errored_blocks_rx_ne": 3,
                "xr.otu.odu.errored_seconds_far_end_rx_fe": 4,
                "xr.otu.odu.errored_seconds_rx_ne": 5,
                "xr.otu.odu.severely_errored_seconds_far_end_rx_fe": 6,
                "xr.otu.odu.severely_errored_seconds_rx_ne": 7,
                "xr.otu.odu.unavailable_seconds_far_end_rx_fe": 8,
                "xr.otu.odu.unavailable_seconds_rx_ne": 9
              },
              "renameByName": {
                "_time": "Time",
                "aid": "AID",
                "xr.otu.odu.errored_blocks_far_end_rx_fe": "Errored Blocks (FE)",
                "xr.otu.odu.errored_blocks_rx_ne": "Errored Blocks (NE)",
                "xr.otu.odu.errored_seconds_far_end_rx_fe": "Errored Seconds (FE)",
                "xr.otu.odu.errored_seconds_rx_ne": "Errored Seconds (NE)",
                "xr.otu.odu.severely_errored_seconds_far_end_rx_fe": "Severely Errored Seconds (FE)",
                "xr.otu.odu.severely_errored_seconds_rx_ne": "Severely Errored Seconds (NE)",
                "xr.otu.odu.unavailable_seconds_far_end_rx_fe": "Unavailable Seconds (FE)",
                "xr.otu.odu.unavailable_seconds_rx_ne": "Unavailable Seconds (NE)"
              }
            }
          }
        ],
        "type": "table"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "InfluxDB-Flux"
        },
        "description": "",
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "custom": {
              "align": "center",
              "cellOptions": {
                "type": "color-text"
              },
              "inspect": false
            },
            "displayName": "${__field.name:regexReplaceAll((\\.\\w+)$, \"$1\")}",
            "mappings": [
              {
                "options": {
                  "-55": {
                    "color": "red",
                    "index": 0,
                    "text": "Not Set"
                  },
                  "not acquired": {
                    "color": "red",
                    "index": 4
                  },
                  "not configured": {
                    "color": "blue",
                    "index": 2
                  },
                  "ok": {
                    "color": "green",
                    "index": 1
                  },
                  "powered down": {
                    "color": "orange",
                    "index": 3
                  }
                },
                "type": "value"
              }
            ],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "short"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 22,
          "x": 0,
          "y": 31
        },
        "id": 56,
        "options": {
          "cellHeight": "sm",
          "footer": {
            "countRows": false,
            "fields": "",
            "reducer": [
              "sum"
            ],
            "show": false
          },
          "frameIndex": 4,
          "showHeader": true,
          "sortBy": [
            {
              "desc": false,
              "displayName": "sn"
            }
          ]
        },
        "pluginVersion": "10.1.1",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "InfluxDB-Flux"
            },
            "query": "from(bucket: \"xr-1m\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"gauge\" or r[\"_field\"] == \"counter\")\r\n  |> filter(fn: (r) => r[\"rt\"] == \"clientptp\")\r\n  |> filter(fn: (r) => r[\"_measurement\"] !~ /_min/ and r[\"_measurement\"] !~ /_max/ and r[\"_measurement\"] !~ /_avg/)\r\n  |> filter(fn: (r) => r[\"sn\"] =~ /^${sn:regex}/)\r\n  |> filter(fn: (r) => r[\"di\"] =~ /^${di:regex}/)\r\n  |> sort(columns: [\"_time\"], desc: true)\r\n  |> aggregateWindow(every: ${interval}, fn: mean)\r\n  |> limit (n:${records})\r\n  |> pivot(rowKey: [\"_time\", \"aid\"], columnKey: [\"_measurement\"], valueColumn: \"_value\")\r\n\r\n\r\n\r\n",
            "refId": "A"
          }
        ],
        "title": "GigE Client PMs",
        "transformations": [
          {
            "id": "labelsToFields",
            "options": {
              "keepLabels": [
                "aid"
              ],
              "valueLabel": "_field"
            }
          },
          {
            "id": "merge",
            "options": {}
          },
          {
            "id": "organize",
            "options": {
              "excludeByName": {},
              "indexByName": {
                "_time": 0,
                "aid": 1,
                "xr.otu.odu.errored_blocks_far_end_rx_fe": 2,
                "xr.otu.odu.errored_blocks_rx_ne": 3,
                "xr.otu.odu.errored_seconds_far_end_rx_fe": 4,
                "xr.otu.odu.errored_seconds_rx_ne": 5,
                "xr.otu.odu.severely_errored_seconds_far_end_rx_fe": 6,
                "xr.otu.odu.severely_errored_seconds_rx_ne": 7,
                "xr.otu.odu.unavailable_seconds_far_end_rx_fe": 8,
                "xr.otu.odu.unavailable_seconds_rx_ne": 9
              },
              "renameByName": {
                "_time": "Time",
                "aid": "AID",
                "xr.clientptp.1m.crc_aligned_err_rx_ne": "",
                "xr.otu.odu.errored_blocks_far_end_rx_fe": "Errored Blocks (FE)",
                "xr.otu.odu.errored_blocks_rx_ne": "Errored Blocks (NE)",
                "xr.otu.odu.errored_seconds_far_end_rx_fe": "Errored Seconds (FE)",
                "xr.otu.odu.errored_seconds_rx_ne": "Errored Seconds (NE)",
                "xr.otu.odu.severely_errored_seconds_far_end_rx_fe": "Severely Errored Seconds (FE)",
                "xr.otu.odu.severely_errored_seconds_rx_ne": "Severely Errored Seconds (NE)",
                "xr.otu.odu.unavailable_seconds_far_end_rx_fe": "Unavailable Seconds (FE)",
                "xr.otu.odu.unavailable_seconds_rx_ne": "Unavailable Seconds (NE)"
              }
            }
          }
        ],
        "type": "table"
      }
    ],
    "refresh": "",
    "schemaVersion": 38,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": [
        {
          "current": {},
          "datasource": {
            "type": "influxdb",
            "uid": "InfluxDB-Flux"
          },
          "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: \"xr-1m\", tag: \"sn\")",
          "hide": 0,
          "includeAll": true,
          "multi": true,
          "name": "sn",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: \"xr-1m\", tag: \"sn\")",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {},
          "datasource": {
            "type": "influxdb",
            "uid": "InfluxDB-Flux"
          },
          "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: \"xr-1m\", tag: \"di\")",
          "hide": 0,
          "includeAll": true,
          "multi": true,
          "name": "di",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: \"xr-1m\", tag: \"di\")",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {
            "selected": false,
            "text": [
              "All"
            ],
            "value": [
              "$__all"
            ]
          },
          "hide": 0,
          "includeAll": true,
          "multi": true,
          "name": "aids",
          "options": [
            {
              "selected": true,
              "text": "All",
              "value": "$__all"
            },
            {
              "selected": false,
              "text": "1",
              "value": "1"
            },
            {
              "selected": false,
              "text": "2",
              "value": "2"
            },
            {
              "selected": false,
              "text": "3",
              "value": "3"
            },
            {
              "selected": false,
              "text": "4",
              "value": "4"
            },
            {
              "selected": false,
              "text": "5",
              "value": "5"
            },
            {
              "selected": false,
              "text": "6",
              "value": "6"
            },
            {
              "selected": false,
              "text": "7",
              "value": "7"
            },
            {
              "selected": false,
              "text": "8",
              "value": "8"
            },
            {
              "selected": false,
              "text": "9",
              "value": "9"
            },
            {
              "selected": false,
              "text": "10",
              "value": "10"
            },
            {
              "selected": false,
              "text": "11",
              "value": "11"
            },
            {
              "selected": false,
              "text": "12",
              "value": "12"
            },
            {
              "selected": false,
              "text": "13",
              "value": "13"
            },
            {
              "selected": false,
              "text": "14",
              "value": "14"
            },
            {
              "selected": false,
              "text": "15",
              "value": "15"
            },
            {
              "selected": false,
              "text": "16",
              "value": "16"
            }
          ],
          "query": " 1, 2, 3, 4, 5, 6, 7,8,9,10,11,12,13,14,15,16",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "current": {
            "selected": true,
            "text": "1",
            "value": "1"
          },
          "description": "To limit the number of records",
          "hide": 0,
          "includeAll": false,
          "multi": false,
          "name": "records",
          "options": [
            {
              "selected": true,
              "text": "1",
              "value": "1"
            },
            {
              "selected": false,
              "text": "5",
              "value": "5"
            },
            {
              "selected": false,
              "text": "10",
              "value": "10"
            },
            {
              "selected": false,
              "text": "15",
              "value": "15"
            },
            {
              "selected": false,
              "text": "20",
              "value": "20"
            },
            {
              "selected": false,
              "text": "25",
              "value": "25"
            }
          ],
          "query": "1, 5, 10, 15, 20, 25",
          "queryValue": "",
          "skipUrlSync": false,
          "type": "custom"
        },
        {
          "auto": false,
          "auto_count": 30,
          "auto_min": "10s",
          "current": {
            "selected": false,
            "text": "1m",
            "value": "1m"
          },
          "hide": 0,
          "name": "interval",
          "options": [
            {
              "selected": true,
              "text": "1m",
              "value": "1m"
            },
            {
              "selected": false,
              "text": "15m",
              "value": "15m"
            },
            {
              "selected": false,
              "text": "1h",
              "value": "1h"
            },
            {
              "selected": false,
              "text": "24h",
              "value": "24h"
            },
            {
              "selected": false,
              "text": "30d",
              "value": "30d"
            }
          ],
          "query": "1m,15m,1h,24h,30d",
          "queryValue": "",
          "refresh": 2,
          "skipUrlSync": false,
          "type": "interval"
        },
        {
          "current": {},
          "datasource": {
            "type": "influxdb",
            "uid": "InfluxDB-Flux"
          },
          "definition": "import \"influxdata/influxdb/schema\"\r\nschema.measurements(bucket: \"xr-1m\")",
          "hide": 2,
          "includeAll": false,
          "multi": true,
          "name": "metrics",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\r\nschema.measurements(bucket: \"xr-1m\")",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {},
          "datasource": {
            "type": "influxdb",
            "uid": "InfluxDB-Flux"
          },
          "definition": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagKeys(bucket: \"xr-1m\")",
          "hide": 2,
          "includeAll": false,
          "multi": false,
          "name": "attributes",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\r\n\r\nschema.tagKeys(bucket: \"xr-1m\")",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        },
        {
          "current": {},
          "datasource": {
            "type": "influxdb",
            "uid": "InfluxDB-Flux"
          },
          "definition": "import \"influxdata/influxdb/schema\"\r\nschema.measurements(bucket: \"xr-1m\")",
          "hide": 2,
          "includeAll": false,
          "multi": true,
          "name": "metrics_2",
          "options": [],
          "query": "import \"influxdata/influxdb/schema\"\r\nschema.measurements(bucket: \"xr-1m\")",
          "refresh": 1,
          "regex": "",
          "skipUrlSync": false,
          "sort": 0,
          "type": "query"
        }
      ]
    },
    "time": {
      "from": "now-15m",
      "to": "now"
    },
    "timepicker": {},
    "timezone": "",
    "title": "Historical PMs with aggregation - per device",
    "uid": "c8920fa9-423f-4b04-a1e6-03e8bc5591d1",
    "version": 8,
    "weekStart": ""
  }