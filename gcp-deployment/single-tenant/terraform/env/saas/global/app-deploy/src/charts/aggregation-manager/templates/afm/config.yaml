apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.afm.name  }}-configmap
  namespace: {{ .Release.Namespace }}
data:
  HTTP_PORT: {{ printf " " }}{{- include  "aggregation-manager.aggregation-fault-management.port" . | quote}}
  {{- if .Values.afm.config.SoakingBowls }}
  SOAKING_BOWLS: {{ printf " " }}{{ .Values.afm.config.SoakingBowls | quote }}
  {{- end }}
  {{- if .Values.afm.config.ExpectedLatency }}
  EXPECTED_LATENCY: {{ printf " " }}{{ .Values.afm.config.ExpectedLatency | quote }}
  {{- end }}
  #OTEL_EXPORTER_OTLP_ENDPOINT:
  {{- if .Values.afm.config.ExecutorQueueSize }}
  EXECUTOR_QUEUE_SIZE:  {{ printf " " }}{{ .Values.afm.config.ExecutorQueueSize | quote }}
  {{- end }}
  {{- if .Values.afm.config.JsMacAckPending }}
  JS_MAX_ACK_PENDING: {{ printf " " }}{{ .Values.afm.config.JsMacAckPending | quote }}
  {{- end }}
  {{- if .Values.afm.config.jsAckWait }}
  JS_ACK_WAIT: {{ printf " " }}{{ .Values.afm.config.jsAckWait | quote }}
  {{- end }}
  {{- if .Values.afm.config.logLevel }}
  LOG_LEVEL: {{ printf " " }}{{ .Values.afm.config.logLevel | quote }}
  {{- end }}

   
  #MQTT
  MQTT_SERVERS:  {{ printf " " }}{{  .Values.afm.clients.mqtt.uri  | default  ( include "aggregation-manager.mqtt" .) | quote}}
  MQTT_TLS_ENABLED: "true"
  MQTT_TLS_SSL_SECURED: "true"
  MQTT_TLS_CA: {{  .Values.afm.clients.mqtt.tls.caPool  |  quote }}
  MQTT_TLS_KEY: {{  .Values.afm.clients.mqtt.tls.keyFile  |  quote }}
  MQTT_TLS_CERT: {{  .Values.afm.clients.mqtt.tls.certFile  |  quote }}
  MQTT_CLIENT_IDENTIFIER:  {{ printf " " }}{{ .Values.afm.clients.mqtt.clientIdentifiers | quote }}
  MQTT_REGIONS: {{ printf " " }}{{ .Values.afm.clients.mqtt.regions | quote }}
  MQTT_SUPPORTED_DEVICES:  {{ printf " " }}{{ .Values.afm.clients.mqtt.supportedDevices | quote }}
  
  # PLGD HUB access configurations
  PLGD_ADDR: {{ printf " " }}{{- include  "plgd.oauth" . | quote}}
  PLGD_GRPC_GW: {{ printf " " }}{{- include  "aggregation-manager.plgdGRPCgw" . | quote}}
  PLGD_JETSTREAM: {{ printf " " }}{{  .Values.afm.clients.jetstream.uri  | default  ( include "aggregation-manager.jetstreamAddr" .) | quote}}
  caPool: {{  .Values.afm.clients.jetstream.tls.caPool  |  quote }}
  keyFile: {{  .Values.afm.clients.jetstream.tls.keyFile  |  quote }}
  certFile:  {{  .Values.afm.clients.jetstream.tls.certFile  |  quote }}

  #Jetstream
  NATS_JETSTREAM:  {{ printf " " }}{{  .Values.afm.clients.jetstream.uri  | default  ( include "aggregation-manager.jetstreamAddr" .) | quote}}
  JETSTREAM_TLS_ENABLED: "true"
  JETSTREAM_TLS_CA: {{  .Values.afm.clients.jetstream.tls.caPool  |  quote }}
  JETSTREAM_TLS_KEY: {{  .Values.afm.clients.jetstream.tls.keyFile  |  quote }}
  JETSTREAM_TLS_CERT:  {{  .Values.afm.clients.jetstream.tls.certFile  |  quote }}
  
  #MongoDB
  MONGO_DB_ADDR:  {{ printf " " }}{{  .Values.afm.clients.mongoDB.uri  | default  ( include "aggregation-manager.mongoDBAddr" .) | quote}}
  MONGO_TLS_ENABLED: "true"
  MONGO_TLS_CA: {{  .Values.afm.clients.mongoDB.tls.caPool  |  quote }}
  MONGO_TLS_KEY: {{  .Values.afm.clients.mongoDB.tls.keyFile  |  quote }}
  MONGO_TLS_CERT:  {{  .Values.afm.clients.mongoDB.tls.certFile  |  quote }}

  #Open Telemetry
  {{- if .Values.global.clients.openTelemetry.uri }}
  OTEL_EXPORTER_OTLP_ENDPOINT: {{ printf " " }}{{ .Values.global.clients.openTelemetry.uri | quote }}
  OPEN_TELEMETRY_TLS_ENABLED: "true"
  OPEN_TELEMETRY_TLS_CA: {{ printf " " }}{{ .Values.global.clients.openTelemetry.tls.caPool | quote }}
  OPEN_TELEMETRY_TLS_CERT: {{ printf " " }}{{ .Values.global.clients.openTelemetry.tls.certFile | quote }}
  OPEN_TELEMETRY_TLS_KEY: {{ printf " " }}{{ .Values.global.clients.openTelemetry.tls.keyFile | quote }}
  {{- end }}